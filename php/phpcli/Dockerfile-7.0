FROM registry.miczone.asia/php/cli:7.0-alpine-312 

ARG PHP_VERSION=7.0.33
ARG PHALCON_VERSION=3.4.5

ARG WORKDIRECTORY=/app

ARG HOST_USER_UID=1000
ARG HOST_USER_GID=1000
ARG HOST_USER_NAME=www
ARG HOST_GROUP_NAME=www

COPY rootCA.pem /usr/local/etc/php/
COPY rootCA.pem /usr/share/ca-certificates/extra/rootCA.pem
RUN echo "extra/rootCA.pem" >> /etc/ca-certificates.conf \
	&& update-ca-certificates --fresh \
	&& cat /etc/ssl/certs/ca-certificates.crt \
#;
#RUN set -xe \
	&& apk add --no-cache git ssmtp linux-headers \
	&& echo 'Creating notroot user and group from host' \
	&& addgroup -g ${HOST_USER_GID} -S ${HOST_GROUP_NAME} \
    && adduser  -u ${HOST_USER_UID} -D -S -G ${HOST_GROUP_NAME} ${HOST_USER_NAME} \
;
RUN set -xe \
	&& apk add --no-cache --virtual .build-deps1 $PHPIZE_DEPS \
	&& docker-php-ext-install -j$(nproc) \
    		pdo \
    		pdo_mysql \
    		mysqli \
    		json \
    		pcntl \
            sockets \
            bcmath \
            mbstring \
;
RUN set -xe \
    && apk add --no-cache --virtual .build-deps2 $PHPIZE_DEPS libxml2-dev \
    && docker-php-ext-install -j$(nproc) xml \
;
RUN set -xe \
    && apk add --no-cache --virtual .build-deps3 $PHPIZE_DEPS \
    && docker-php-ext-install -j$(nproc) opcache \
;
RUN set -xe \
    && apk add --no-cache --virtual .build-deps4 $PHPIZE_DEPS \
    && apk add --no-cache --virtual .build-deps5 --repository http://dl-cdn.alpinelinux.org/alpine/v3.7/main icu-dev=59.1-r1 \
    && docker-php-ext-install -j$(nproc) intl \
;
RUN set -xe \
    && apk add --no-cache --virtual .build-deps6 $PHPIZE_DEPS zlib-dev \
    && docker-php-ext-install -j$(nproc) zip \
;
RUN set -xe \
    && apk add --no-cache --virtual .build-deps7 $PHPIZE_DEPS zlib-dev libmemcached-dev \
    && pecl install memcached \
    && docker-php-ext-enable memcached \
;
RUN set -xe \
    && pecl install \
		apcu \
		xdebug-2.7.2 \
		redis \
    && docker-php-ext-enable \
    	apcu \
    	xdebug \
    	redis \
;
RUN set -xe \
    && apk add --no-cache --virtual .build-deps8 $PHPIZE_DEPS jpeg-dev libpng-dev freetype-dev \
    && docker-php-ext-configure gd  --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd	 \
;
RUN set -xe \
    && apk add --no-cache --virtual .build-deps9 imagemagick imagemagick-dev \
	&& pecl install imagick \
	&& docker-php-ext-enable imagick \
;
RUN set -xe \
	&& apk add --no-cache --virtual .build-deps10 $PHPIZE_DEPS \
    && curl -L -o /tmp/cphalcon.zip https://github.com/phalcon/cphalcon/archive/v${PHALCON_VERSION}.zip \
    && unzip -d /tmp/ /tmp/cphalcon.zip \
    && cd /tmp/cphalcon-${PHALCON_VERSION}/build \
	&& sh ./install \
	&& echo "extension=phalcon.so" > /usr/local/etc/php/conf.d/phalcon.ini \
;
RUN set -xe \
    && pecl install protobuf \
    && docker-php-ext-enable protobuf \
;
RUN set -xe \
    && apk add --no-cache --virtual .build-deps11 libzip-dev \
    && pecl install grpc \
    && docker-php-ext-enable grpc \
;
RUN set -xe \
	&& apk add --no-cache --virtual .build-deps12 librdkafka-dev \
	&& pecl install rdkafka-3.1.3 \
	&& docker-php-ext-enable rdkafka \
;
RUN set -xe \
	&& runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)" \
	&& apk add --no-cache --virtual .api-phpexts-rundeps $runDeps \
	&& apk del .build-deps1 .build-deps2 .build-deps3 .build-deps4 .build-deps5 .build-deps6 .build-deps7 .build-deps8 .build-deps9 .build-deps10 .build-deps11 .build-deps12 \
	\
	&& mkdir -p var/cache var/logs var/sessions \
;

ADD https://raw.githubusercontent.com/php/php-src/php-${PHP_VERSION}/php.ini-production /usr/local/etc/php/php.ini
RUN set -xe \
	&& echo "Modify php.ini config" \
	&& sed -e "s/^short_open_tag .*$/short_open_tag = Off/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^asp_tags .*$/asp_tags = Off/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^expose_php .*$/expose_php = Off/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^display_errors .*$/display_errors = Off/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^display_startup_errors .*$/display_startup_errors = Off/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^log_errors .*$/log_errors = On/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^memory_limit .*$/memory_limit = 150M/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^allow_url_fopen .*$/allow_url_fopen = Off/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^allow_url_include .*$/allow_url_include = Off/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^\;date\.timezone .*$/date\.timezone = \"Asia\/Ho_Chi_Minh\"/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^safe_mode .*$/safe_mode = Off/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^disable_functions .*$/disable_functions = proc_open, popen, disk_free_space, diskfreespace, leak, system, shell_exec, escapeshellcmd, proc_nice, dl, symlink, show_source/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^max_execution_time .*$/max_execution_time = 60/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^max_execution_time .*$/max_execution_time = 60/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^\;opcache\.enable.*$/opcache.enable = 1/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^\;opcache\.enable_cli.*$/opcache.enable_cli = 1/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^\;opcache\.validate_timestamps.*$/opcache.validate_timestamps = 1/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^\;opcache\.revalidate_freq.*$/opcache.revalidate_freq = 1/g" -i /usr/local/etc/php/php.ini \
	&& sed -e "s/^mailhub.*$/mailhub=mail:1025/g" -i /etc/ssmtp/ssmtp.conf \
	\
	&& sed -n -e '/^\;?xdebug\.remote_enable/!p' -e '$axdebug.remote_enable = 1' -i /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  \
    && sed -n -e '/^\;?xdebug\.remote_host/!p' -e '$axdebug.remote_host = 10.254.254.254' -i /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  \
	&& sed -n -e '/^\;?xdebug\.remote_mode/!p' -e '$axdebug.remote_mode = jit' -i /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  \
	&& sed -n -e '/^\;?xdebug\.port/!p' -e '$axdebug.port = 9000' -i /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini  \
	&& sed -n -e '/^\;?xdebug\.idekey/!p' -e '$axdebug.idekey = PHPSTORM' -i /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
	&& sed -n -e '/^\;?xdebug\.profiler_enable/!p' -e '$axdebug.profiler_enable = 0' -i /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
	&& sed -n -e '/^\;?xdebug\.profiler_enable_trigger/!p' -e '$axdebug.profiler_enable_trigger = 1' -i /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
	&& sed -n -e '/^\;?xdebug\.profiler_output_dir/!p' -e '$axdebug.profiler_output_dir = /app/var/profiler' -i /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \
	# && sed -e "s/^\;curl\.cainfo.*$/curl\.cainfo = \/usr\/local\/etc\/php\/rootCA\.pem/g" -i /usr/local/etc/php/php.ini \
    # && sed -e "s/^\;openssl\.cafile.*$/openssl\.cafile = \/usr\/local\/etc\/php\/rootCA\.pem/g" -i /usr/local/etc/php/php.ini \
;
RUN set -xe \
    && php -m \
    && php -m | grep phalcon

VOLUME ["${WORKDIRECTORY}"]

WORKDIR ${WORKDIRECTORY}

#USER ${HOST_USER_NAME}
